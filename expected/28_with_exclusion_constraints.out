-- MOVING THE TIME OF A CHANGE
SELECT enable_sql_saga_for_shifts_houses_and_rooms();
 enable_sql_saga_for_shifts_houses_and_rooms 
---------------------------------------------
 
(1 row)

-- 1. Small shift to a later time
--
--
-- 1.1. Small shift to a later time, moving both ranges at once:
--
--
DELETE FROM rooms;
DELETE FROM houses;
INSERT INTO houses VALUES
  (1, 150000, '2015-01-01', '2016-01-01'),
  (1, 200000, '2016-01-01', '2017-01-01')
;
INSERT INTO rooms VALUES
  (1, 1, '2015-01-01', '2017-01-01')
;
BEGIN;
SET CONSTRAINTS ALL DEFERRED;
UPDATE houses
SET valid_from = new_valid_from,
    valid_to = new_valid_to
FROM (VALUES
    (1, '2015-01-01'::TIMESTAMPTZ, '2015-01-01'::TIMESTAMPTZ, '2016-06-01'::TIMESTAMPTZ),
    (1, '2016-01-01'::TIMESTAMPTZ, '2016-06-01'::TIMESTAMPTZ, '2017-01-01'::TIMESTAMPTZ)
) AS change(id, old_valid_from, new_valid_from, new_valid_to)
WHERE houses.id = change.id
  AND valid_from = old_valid_from;
SET CONSTRAINTS ALL IMMEDIATE;
COMMIT;
--
--
-- 1.2. Small shift to a later time, moving the earlier range first:
--
--
DELETE FROM rooms;
DELETE FROM houses;
INSERT INTO houses VALUES 
  (1, 150000, '2015-01-01', '2016-01-01'),
  (1, 200000, '2016-01-01', '2017-01-01')
;
INSERT INTO rooms VALUES
  (1, 1,'2015-01-01', '2017-01-01')
;
--
-- 1.2.1. You can't move the time in two transactions.
--
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2016-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
ERROR:  conflicting key value violates exclusion constraint "houses_id_tstzrange_excl"
DETAIL:  Key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Thu Jan 01 00:00:00 2015 PST","Wed Jun 01 00:00:00 2016 PDT")) conflicts with existing key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Fri Jan 01 00:00:00 2016 PST","Sun Jan 01 00:00:00 2017 PST")).
UPDATE  houses
SET     (valid_from, valid_to) = ('2016-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
ERROR:  update or delete on table "houses" violates foreign key constraint "rooms_house_id_valid" on table "rooms"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 176 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, true)"
PL/pgSQL function sql_saga.uk_update_check() line 23 at PERFORM
--
-- 1.2.2. When the exclusion constraint is checked immediately,
--        you can't move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl IMMEDIATE;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2016-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
ERROR:  conflicting key value violates exclusion constraint "houses_id_tstzrange_excl"
DETAIL:  Key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Thu Jan 01 00:00:00 2015 PST","Wed Jun 01 00:00:00 2016 PDT")) conflicts with existing key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Fri Jan 01 00:00:00 2016 PST","Sun Jan 01 00:00:00 2017 PST")).
UPDATE  houses
SET     (valid_from, valid_to) = ('2016-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
COMMIT;
--
-- 1.2.3. When the exclusion constraint is checked deferred,
--        you can move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl DEFERRED;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2016-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
UPDATE  houses
SET     (valid_from, valid_to) = ('2016-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
COMMIT;
--
--
-- 1.3. Small shift to a later time, moving the later range first:
--
--
DELETE FROM rooms;
DELETE FROM houses;
INSERT INTO houses VALUES
  (1, 150000, '2015-01-01', '2016-01-01'),
  (1, 200000, '2016-01-01', '2017-01-01')
;
INSERT INTO rooms VALUES
  (1, 1, '2015-01-01', '2017-01-01')
;
--
-- 1.3.1. You can't move the time in two transactions.
--
UPDATE  houses
SET     (valid_from, valid_to) = ('2016-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
ERROR:  update or delete on table "houses" violates foreign key constraint "rooms_house_id_valid" on table "rooms"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 176 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, true)"
PL/pgSQL function sql_saga.uk_update_check() line 23 at PERFORM
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2016-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
ERROR:  conflicting key value violates exclusion constraint "houses_id_tstzrange_excl"
DETAIL:  Key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Thu Jan 01 00:00:00 2015 PST","Wed Jun 01 00:00:00 2016 PDT")) conflicts with existing key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Fri Jan 01 00:00:00 2016 PST","Sun Jan 01 00:00:00 2017 PST")).
--
-- 1.3.2. When the exclusion constraint is checked immediately,
--        you can move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl IMMEDIATE;
UPDATE  houses
SET     (valid_from, valid_to) = ('2016-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2016-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
COMMIT;
--
-- 1.3.3. When the exclusion constraint is checked deferred,
--        you can move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl DEFERRED;
UPDATE  houses
SET     (valid_from, valid_to) = ('2016-09-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-06-01'
;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2016-09-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
COMMIT;
-- 2. Small shift to an earlier time
-- 2.1 Small shift to an earlier time, moving both ranges at once:
DELETE FROM rooms;
DELETE FROM houses;
INSERT INTO houses VALUES
  (1, 150000, '2015-01-01', '2016-01-01'),
  (1, 200000, '2016-01-01', '2017-01-01')
;
INSERT INTO rooms VALUES
  (1, 1, '2015-01-01', '2017-01-01')
;
BEGIN;
SET CONSTRAINTS ALL DEFERRED;
UPDATE houses
SET valid_from = new_valid_from,
    valid_to = new_valid_to
FROM (VALUES
    (1, '2015-01-01'::TIMESTAMPTZ, '2015-01-01'::TIMESTAMPTZ, '2015-06-01'::TIMESTAMPTZ),
    (1, '2016-01-01'::TIMESTAMPTZ, '2015-06-01'::TIMESTAMPTZ, '2017-01-01'::TIMESTAMPTZ)
) AS change(id, old_valid_from, new_valid_from, new_valid_to)
WHERE houses.id = change.id
  AND valid_from = old_valid_from;
SET CONSTRAINTS ALL IMMEDIATE;
COMMIT;
-- 2.2 Small shift to an earlier time, moving the earlier range first:
DELETE FROM rooms;
DELETE FROM houses;
INSERT INTO houses VALUES
  (1, 150000, '2015-01-01', '2016-01-01'),
  (1, 200000, '2016-01-01', '2017-01-01')
;
INSERT INTO rooms VALUES
  (1, 1, '2015-01-01', '2017-01-01')
;
--
-- 2.2.1. You can't move the time in two transactions.
--
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2015-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
ERROR:  update or delete on table "houses" violates foreign key constraint "rooms_house_id_valid" on table "rooms"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 176 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, true)"
PL/pgSQL function sql_saga.uk_update_check() line 23 at PERFORM
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
ERROR:  conflicting key value violates exclusion constraint "houses_id_tstzrange_excl"
DETAIL:  Key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Mon Jun 01 00:00:00 2015 PDT","Sun Jan 01 00:00:00 2017 PST")) conflicts with existing key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Thu Jan 01 00:00:00 2015 PST","Fri Jan 01 00:00:00 2016 PST")).
--
-- 2.2.2. When the exclusion constraint is checked immediately,
--        you can move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl IMMEDIATE;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2015-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
COMMIT;
--
-- 2.2.3. When the exclusion constraint is checked deferred,
--        you can move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl DEFERRED;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2015-03-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-03-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2015-06-01'
;
COMMIT;
-- 2.3 Small shift to an earlier time, moving the later range first:
DELETE FROM rooms;
DELETE FROM houses;
INSERT INTO houses VALUES
  (1, 150000, '2015-01-01', '2016-01-01'),
  (1, 200000, '2016-01-01', '2017-01-01')
;
INSERT INTO rooms VALUES
  (1, 1, '2015-01-01', '2017-01-01')
;
--
-- 2.3.1. You can't move the time in two transactions.
--
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
ERROR:  conflicting key value violates exclusion constraint "houses_id_tstzrange_excl"
DETAIL:  Key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Mon Jun 01 00:00:00 2015 PDT","Sun Jan 01 00:00:00 2017 PST")) conflicts with existing key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Thu Jan 01 00:00:00 2015 PST","Fri Jan 01 00:00:00 2016 PST")).
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2015-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
ERROR:  update or delete on table "houses" violates foreign key constraint "rooms_house_id_valid" on table "rooms"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 176 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, true)"
PL/pgSQL function sql_saga.uk_update_check() line 23 at PERFORM
--
-- 2.3.2. When the exclusion constraint is checked immediately,
--        you can't move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl IMMEDIATE;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
ERROR:  conflicting key value violates exclusion constraint "houses_id_tstzrange_excl"
DETAIL:  Key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Mon Jun 01 00:00:00 2015 PDT","Sun Jan 01 00:00:00 2017 PST")) conflicts with existing key (id, tstzrange(valid_from, valid_to, '[)'::text))=(1, ["Thu Jan 01 00:00:00 2015 PST","Fri Jan 01 00:00:00 2016 PST")).
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2015-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
COMMIT;
--
-- 2.3.3. When the exclusion constraint is checked deferred,
--        you can move the time in one transaction with two statements.
--
BEGIN;
SET CONSTRAINTS houses_id_tstzrange_excl DEFERRED;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-06-01', '2017-01-01')
WHERE   id = 1 AND valid_from = '2016-01-01'
;
UPDATE  houses
SET     (valid_from, valid_to) = ('2015-01-01', '2015-06-01')
WHERE   id = 1 AND valid_from = '2015-01-01'
;
COMMIT;
-- 3. Large shift to a later time (all the way past the later range)
-- 3.1. Large shift to a later time (all the way past the later range), earlier first:
-- TODO
-- 3.2. Large shift to a later time (all the way past the later range), later first:
-- TODO
-- 4. Large shift to an earlier time (all the way past the earlier range)
-- 4.1. Large shift to an earlier time (all the way past the earlier range), earlier first:
-- TODO
-- 4.2. Large shift to an earlier time (all the way past the earlier range), later first:
-- TODO
-- 5. Swap the ranges
-- 5.1. Swap the ranges, earlier first:
-- TODO
-- 5.2. Swap the ranges, later first:
-- TODO
SELECT disable_sql_saga_for_shifts_houses_and_rooms();
 disable_sql_saga_for_shifts_houses_and_rooms 
----------------------------------------------
 
(1 row)

