INSERT INTO houses VALUES 
  (1, 150000, tstzrange('2015-01-01', '2016-01-01')),
  (1, 200000, tstzrange('2016-01-01', '2017-01-01'))
;
-- it works on an empty table
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
 create_temporal_foreign_key 
-----------------------------
 
(1 row)

SELECT drop_temporal_foreign_key('room_has_a_house', 'rooms', 'houses');
 drop_temporal_foreign_key 
---------------------------
 
(1 row)

-- it works on a table with a NULL foreign key
INSERT INTO rooms VALUES (1, NULL, tstzrange('2015-01-01', '2017-01-01'));
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
 create_temporal_foreign_key 
-----------------------------
 
(1 row)

SELECT drop_temporal_foreign_key('room_has_a_house', 'rooms', 'houses');
 drop_temporal_foreign_key 
---------------------------
 
(1 row)

DELETE FROM rooms;
-- it works on a table with a FK fulfilled by one row
INSERT INTO rooms VALUES (1, 1, tstzrange('2015-01-01', '2016-01-01'));
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
 create_temporal_foreign_key 
-----------------------------
 
(1 row)

SELECT drop_temporal_foreign_key('room_has_a_house', 'rooms', 'houses');
 drop_temporal_foreign_key 
---------------------------
 
(1 row)

DELETE FROM rooms;
-- it works on a table with a FK fulfilled by two rows
INSERT INTO rooms VALUES (1, 1, tstzrange('2015-01-01', '2016-06-01'));
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
 create_temporal_foreign_key 
-----------------------------
 
(1 row)

SELECT drop_temporal_foreign_key('room_has_a_house', 'rooms', 'houses');
 drop_temporal_foreign_key 
---------------------------
 
(1 row)

DELETE FROM rooms;
-- it fails on a table with a missing foreign key
INSERT INTO rooms VALUES (1, 2, tstzrange('2015-01-01', '2016-01-01'));
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
ERROR:  Tried to insert 2 to rooms.house_id but couldn't find it in houses.id for all of [Thu Jan 01 00:00:00 2015 PST, Fri Jan 01 00:00:00 2016 PST)
CONTEXT:  PL/pgSQL function tri_fkey_check(text,text,text,text,text,text,integer,tstzrange,boolean) line 25 at RAISE
SQL statement "SELECT TRI_FKey_check(
      from_table, from_column, from_range_column,
      to_table,   to_column,   to_range_column,
      fk_val, from_range, false)"
PL/pgSQL function create_temporal_foreign_key(text,text,text,text,text,text,text) line 92 at PERFORM
DELETE FROM rooms;
-- it fails on a table with a completely-uncovered foreign key
INSERT INTO rooms VALUES (1, 1, tstzrange('2010-01-01', '2011-01-01'));
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
ERROR:  Tried to insert 1 to rooms.house_id but couldn't find it in houses.id for all of [Fri Jan 01 00:00:00 2010 PST, Sat Jan 01 00:00:00 2011 PST)
CONTEXT:  PL/pgSQL function tri_fkey_check(text,text,text,text,text,text,integer,tstzrange,boolean) line 25 at RAISE
SQL statement "SELECT TRI_FKey_check(
      from_table, from_column, from_range_column,
      to_table,   to_column,   to_range_column,
      fk_val, from_range, false)"
PL/pgSQL function create_temporal_foreign_key(text,text,text,text,text,text,text) line 92 at PERFORM
DELETE FROM rooms;
-- it fails on a table with a partially-covered foreign key
INSERT INTO rooms VALUES (1, 1, tstzrange('2015-01-01', '2018-01-01'));
SELECT create_temporal_foreign_key('room_has_a_house', 'rooms', 'house_id', 'valid_at', 'houses', 'id', 'valid_at');
ERROR:  Tried to insert 1 to rooms.house_id but couldn't find it in houses.id for all of [Thu Jan 01 00:00:00 2015 PST, Mon Jan 01 00:00:00 2018 PST)
CONTEXT:  PL/pgSQL function tri_fkey_check(text,text,text,text,text,text,integer,tstzrange,boolean) line 25 at RAISE
SQL statement "SELECT TRI_FKey_check(
      from_table, from_column, from_range_column,
      to_table,   to_column,   to_range_column,
      fk_val, from_range, false)"
PL/pgSQL function create_temporal_foreign_key(text,text,text,text,text,text,text) line 92 at PERFORM
DELETE FROM rooms;
DELETE FROM rooms;
DELETE FROM houses;
