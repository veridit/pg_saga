SELECT setting::integer < 130000 AS pre_13
FROM pg_settings WHERE name = 'server_version_num';
 pre_13 
--------
 f
(1 row)

/* Run tests as unprivileged user */
SET ROLE TO periods_unprivileged_user;
/* Basic period definitions with dates */
CREATE TABLE basic (val text, s date, e date);
TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
(0 rows)

SELECT periods.add_period('basic', 'bp', 's', 'e');
 add_period 
------------
 t
(1 row)

TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
 basic      | bp          | s                 | e               | daterange  | basic_bp_check
(1 row)

SELECT periods.drop_period('basic', 'bp');
 drop_period 
-------------
 t
(1 row)

TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
(0 rows)

SELECT periods.add_period('basic', 'bp', 's', 'e', bounds_check_constraint => 'c');
 add_period 
------------
 t
(1 row)

TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
 basic      | bp          | s                 | e               | daterange  | c
(1 row)

SELECT periods.drop_period('basic', 'bp', purge => true);
 drop_period 
-------------
 t
(1 row)

TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
(0 rows)

SELECT periods.add_period('basic', 'bp', 's', 'e');
 add_period 
------------
 t
(1 row)

TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
 basic      | bp          | s                 | e               | daterange  | basic_bp_check
(1 row)

/* Test constraints */
INSERT INTO basic (val, s, e) VALUES ('x', null, null); --fail
ERROR:  null value in column "s" of relation "basic" violates not-null constraint
DETAIL:  Failing row contains (x, null, null).
INSERT INTO basic (val, s, e) VALUES ('x', '3000-01-01', null); --fail
ERROR:  null value in column "e" of relation "basic" violates not-null constraint
DETAIL:  Failing row contains (x, 01-01-3000, null).
INSERT INTO basic (val, s, e) VALUES ('x', null, '1000-01-01'); --fail
ERROR:  null value in column "s" of relation "basic" violates not-null constraint
DETAIL:  Failing row contains (x, null, 01-01-1000).
INSERT INTO basic (val, s, e) VALUES ('x', '3000-01-01', '1000-01-01'); --fail
ERROR:  new row for relation "basic" violates check constraint "basic_bp_check"
DETAIL:  Failing row contains (x, 01-01-3000, 01-01-1000).
INSERT INTO basic (val, s, e) VALUES ('x', '1000-01-01', '3000-01-01'); --success
TABLE basic;
 val |     s      |     e      
-----+------------+------------
 x   | 01-01-1000 | 01-01-3000
(1 row)

/* Test dropping the whole thing */
DROP TABLE basic;
TABLE periods.periods;
 table_name | period_name | start_column_name | end_column_name | range_type | bounds_check_constraint 
------------+-------------+-------------------+-----------------+------------+-------------------------
(0 rows)

